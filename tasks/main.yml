---
- include: check_system.yml
- include: check_variables.yml

- name: Add repository key
  apt_key:
    keyserver: hkp://keyserver.ubuntu.com:80
    id: E56151BF

- name: Add repository list
  apt_repository: "{{ item }}"
  with_items:
    - { repo: 'deb http://repos.mesosphere.com/ubuntu {{ ansible_distribution_release }} main', filename: mesosphere }
    - { repo: 'ppa:webupd8team/java' }

- name: Set acceptance value before installing oracle java8
  debconf:
    name: oracle-java8-installer
    question: shared/accepted-oracle-license-v1-1
    value: true
    vtype: boolean

- name: Include variables depends on distribution release
  include_vars: "vars_{{ ansible_distribution_release }}.yml"
  when: mesos_version is undefined or marathon_version is undefined

- name: Install oralce-java8-installer and mesos
  apt: name={{ item }}
  with_items:
    - oracle-java8-installer
    - oracle-java8-set-default
    - mesos='{{ mesos_version }}'

- name: Create some configuration files for mesos
  shell: "{{ item }}"
  with_items:
    - 'echo manual > /etc/init/zookeeper.override'
    - 'echo manual > /etc/init/mesos-master.override'
    - 'echo docker,mesos > /etc/mesos-slave/containerizers'
    - 'echo 5mins > /etc/mesos-slave/executor_registration_timeout'
    - 'echo $(hostname -i) > /etc/mesos-slave/hostname'

- name: Check running weave
  shell: systemctl status weave
  register: weave_status
  ignore_errors: yes
  when: "'{{ ansible_distribution_version }}' == '16.04'"

- name: Create docker_socket and executor_environment_variables
  shell: "{{ item }}"
  with_items:
    - 'echo "/var/run/weave/weave.sock" > /etc/mesos-slave/docker_socket'
    - 'echo "{\"DOCKER_HOST\": \"unix:///var/run/weave/weave.sock\"}" > /etc/mesos-slave/executor_environment_variables'
  when: weave_status is defined and (weave_status.failed is undefined or weave_status.failed == false)

- name: Configure zookeeper connection of mesos masters
  template:
    src: zk.j2
    dest: /etc/mesos/zk

- name: Configure hostname in /etc/hosts
  shell: |
    cat /etc/hosts | grep "{{ ansible_host }}"
    if [ $? -ne 0 ]; then echo "{{ ansible_host }} $(hostname)" >> /etc/hosts; fi
    
- include: service_mgmt_{{ ansible_distribution_release }}.yml
